[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

uniform vec2 center;
uniform float force;
uniform float width;
uniform float waviness;

void fragment(){
	float ratio = SCREEN_PIXEL_SIZE.x / SCREEN_PIXEL_SIZE.y;
	vec2 scaledUV = (SCREEN_UV - vec2(0.5, 0.0)) / vec2(ratio, 1.0) + vec2(0.5, 0.0);
	//float mask = (1.0 - smoothstep(size-0.1, size, length(scaledUV - center))) * 
	//		smoothstep(size-thickness-0.1, size-thickness, length(scaledUV - center)); 
	vec2 disp = normalize(scaledUV - center) * force; //* mask;
	COLOR = texture(SCREEN_TEXTURE,SCREEN_UV - disp);
	//COLOR.r = texture(SCREEN_TEXTURE,vec2(SCREEN_UV.x + offset, SCREEN_UV.y) - disp).r;
	//COLOR.g = texture(SCREEN_TEXTURE,SCREEN_UV - disp).g;
	//COLOR.b = texture(SCREEN_TEXTURE,vec2(SCREEN_UV.x - offset, SCREEN_UV.y) - disp).b;
	//COLOR.rgb = vec3(mask);
}"

[resource]
shader = SubResource( 5 )
shader_param/center = Vector2( 0.5, 0.5 )
shader_param/force = null
shader_param/width = null
shader_param/waviness = null
